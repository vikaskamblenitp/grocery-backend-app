generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model core_order_status {
  id                         Int                          @id
  code                       String                       @db.VarChar(20)
  label                      String                       @db.VarChar(20)
  data_orders                data_orders[]
  data_orders_status_history data_orders_status_history[]
}

model core_roles {
  id         Int          @id
  code       String       @db.VarChar(20)
  label      String       @db.VarChar(20)
  data_users data_users[]
}

model data_items {
  id                        String                      @id(map: "data_items_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                      String                      @db.VarChar(50)
  description               String?                     @db.VarChar(255)
  price                     Decimal                     @db.Decimal(10, 2)
  quantity                  Int
  status                    item_status
  image_url                 String?                     @db.VarChar(255)
  created_at                DateTime                    @default(now()) @db.Timestamp(6)
  updated_at                DateTime                    @default(now()) @db.Timestamp(6)
  data_items_status_history data_items_status_history[]
  data_order_items          data_order_items[]

  @@index([name])
  @@index([price])
}

model data_items_status_history {
  id         String      @id(map: "data_items_status_history_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item_id    String      @db.Uuid
  status     item_status
  created_at DateTime    @default(now()) @db.Timestamp(6)
  data_items data_items  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_items_fk")
}

model data_order_items {
  id          String      @id(map: "data_order_items_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id    String      @db.Uuid
  item_id     String      @db.Uuid
  quantity    Int
  price       Decimal     @db.Decimal(10, 2)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  data_items  data_items  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_items_fk")
  data_orders data_orders @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_order_fk")
}

model data_orders {
  id                         String                       @id(map: "data_orders_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                    String                       @db.Uuid
  total_price                Decimal                      @db.Decimal(10, 2)
  status                     Int
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  data_order_items           data_order_items[]
  data_users                 data_users                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_orders_user_fk")
  core_order_status          core_order_status            @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_status_fk")
  data_orders_status_history data_orders_status_history[]

  @@index([user_id])
}

model data_users {
  id          String        @id(map: "data_users_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name  String        @db.VarChar(20)
  last_name   String        @db.VarChar(20)
  email       String        @unique(map: "data_users_email_unique_key") @db.VarChar(30)
  password    String        @db.VarChar(255)
  role_id     Int
  profile_url String?       @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  data_orders data_orders[]
  core_roles  core_roles    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_users_role_id_fk")

  @@index([email])
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  run_on DateTime @db.Timestamp(6)
}

model data_orders_status_history {
  id                String            @id(map: "data_orders_status_history_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id          String            @db.Uuid
  status            Int
  created_at        DateTime          @default(now()) @db.Timestamp(6)
  data_orders       data_orders       @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_orders_status_history_fk")
  core_order_status core_order_status @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "data_orders_status_history_status_fk")
}

enum item_status {
  ACTIVE
  INACTIVE
  DELETED
  OUT_OF_STOCK
}
