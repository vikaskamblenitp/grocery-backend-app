generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OrderStatus {
  id                         Int                   @id
  code                       String                @db.VarChar(20)
  label                      String                @db.VarChar(20)
  data_orders                Orders[]
  data_orders_status_history OrdersStatusHistory[]

  @@map("core_order_status")
}

model Roles {
  id         Int     @id
  code       String  @db.VarChar(20)
  label      String  @db.VarChar(20)
  data_users Users[]

  @@map("core_roles")
}

model Items {
  id                        String               @id(map: "data_items_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                      String               @db.VarChar(50)
  description               String?              @db.VarChar(255)
  price                     Decimal              @db.Decimal(10, 2)
  quantity                  Int
  status                    ItemStatus
  image_url                 String?              @db.VarChar(255)
  created_at                DateTime             @default(now()) @db.Timestamp(6)
  updated_at                DateTime             @default(now()) @db.Timestamp(6)
  data_items_status_history ItemsStatusHistory[]
  data_order_items          OrderItems[]

  @@index([name])
  @@index([price])
  @@map("data_items")
}

model ItemsStatusHistory {
  id         String     @id(map: "data_items_status_history_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item_id    String     @db.Uuid
  status     ItemStatus
  created_at DateTime   @default(now()) @db.Timestamp(6)
  data_items Items      @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "data_items_fk")

  @@map("data_items_status_history")
}

model OrderItems {
  id          String   @id(map: "data_order_items_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id    String   @db.Uuid
  item_id     String   @db.Uuid
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  data_items  Items    @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "data_items_fk")
  data_orders Orders   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "data_order_fk")

  @@map("data_order_items")
}

model Orders {
  id                         String                @id(map: "data_orders_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                    String                @db.Uuid
  total_price                Decimal               @db.Decimal(10, 2)
  status                     Int
  created_at                 DateTime              @default(now()) @db.Timestamp(6)
  updated_at                 DateTime              @default(now()) @db.Timestamp(6)
  data_order_items           OrderItems[]
  data_users                 Users                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "data_orders_user_fk")
  core_order_status          OrderStatus           @relation(fields: [status], references: [id], onUpdate: Restrict, map: "order_status_fk")
  data_orders_status_history OrdersStatusHistory[]

  @@index([user_id])
  @@map("data_orders")
}

model Users {
  id          String   @id(map: "data_users_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name  String   @db.VarChar(20)
  last_name   String   @db.VarChar(20)
  email       String   @unique(map: "data_users_email_unique_key") @db.VarChar(30)
  password    String   @db.VarChar(255)
  role_id     Int
  profile_url String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  data_orders Orders[]
  core_roles  Roles    @relation(fields: [role_id], references: [id], onUpdate: Restrict, map: "data_users_role_id_fk")

  @@index([email])
  @@map("data_users")
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  run_on DateTime @db.Timestamp(6)
}

model OrdersStatusHistory {
  id                String      @id(map: "data_orders_status_history_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id          String      @db.Uuid
  status            Int
  created_at        DateTime    @default(now()) @db.Timestamp(6)
  data_orders       Orders      @relation(fields: [order_id], references: [id], onUpdate: NoAction, map: "data_orders_status_history_fk")
  core_order_status OrderStatus @relation(fields: [status], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "data_orders_status_history_status_fk")

  @@map("data_orders_status_history")
}

enum ItemStatus {
  ACTIVE
  INACTIVE
  DELETED
  OUT_OF_STOCK

  @@map("item_status")
}
